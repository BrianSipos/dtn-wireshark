name: Wireshark Plugin

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      CC: ccache gcc
      CXX: ccache g++
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      USE_CCACHE: 1

    steps:
    - name: Retrieve cache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ubuntu-ccache-${{ github.sha }}
        restore-keys: |
          ubuntu-ccache-

    - uses: actions/checkout@v3
    - name: wireshark
      run: |
        git clone https://gitlab.com/BrianSipos/wireshark.git
        cd wireshark
        git checkout master
        sudo ./tools/debian-setup.sh ${COMMON_APT_GET_ARGS} --install-optional --install-deb-deps --install-test-deps \
            awscli \
            build-essential \
            ccache \
            colorized-logs \
            cppcheck \
            curl \
            doxygen \
            fakeroot \
            gcc-10 g++-10 \
            graphviz \
            jq \
            lintian \
            locales \
            python3-pygments \
            python3-pytest-xdist \
            shellcheck \
            sloccount \
            zip
        # build without the GUI, don't need for testing
        cmake -S . -B build -GNinja -DBUILD_wireshark=OFF
        cmake --build build
        sudo cmake --install build
        sudo cmake --install build --component Development
    - name: dependencies
      run: |
        sudo apt-get update && sudo apt-get install git cmake build-essential libgcrypt-dev gnutls-dev libgtest-dev
    - name: configure
      run: |
        cmake -S . -B build -GNinja
    - name: build
      run: |
        cmake --build build/ --target all
        sudo cmake --install build
    - name: check
      run: |
        cd build
        ctest -V
        tshark -G protocols | grep bpsec-cose
        tshark -G protocols | grep bpv7.acme
        